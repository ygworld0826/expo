{"ast":null,"code":"var _jsxFileName = \"/Users/sungwoocho/Desktop/expo/src/components/Explorer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TransactionDetails from \"./TransactionDetails\";\nimport BlockDetails from \"./BlockDetails\";\nimport \"../assets/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Explorer = () => {\n  _s();\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [searchType, setSearchType] = useState(null);\n  const [searchResult, setSearchResult] = useState(null);\n  const [error, setError] = useState(null);\n  // 변경: 검색 중 로딩 상태를 관리하기 위해 isLoading 상태 추가\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSearch = () => {\n    setError(null);\n    // 변경: 검색 시작 시 로딩 상태를 true로 설정\n    setIsLoading(true);\n    if (/^\\d+$/.test(searchInput)) {\n      setSearchType(\"block\");\n      setSearchResult({\n        type: \"block\",\n        value: searchInput\n      });\n    } else if (searchInput.startsWith(\"0x\") && searchInput.length === 66) {\n      setSearchType(\"tx\");\n      setSearchResult({\n        type: \"tx\",\n        value: searchInput\n      });\n    } else {\n      setSearchType(null);\n      setSearchResult(null);\n      setError(\"Please enter a valid Block Number or TX Hash (0x followed by 64 characters)\");\n    }\n    // 변경: 검색 완료 후 로딩 상태를 false로 설정\n    // 실제로는 비동기 작업이 완료된 후 설정해야 하지만, 여기서는 간단히 setTimeout으로 시뮬레이션\n    setTimeout(() => setIsLoading(false), 500); // 500ms 후 로딩 종료 (실제로는 비동기 작업 완료 시점에 설정)\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"explorer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blockchain Explorer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchInput,\n        onChange: e => setSearchInput(e.target.value),\n        onKeyDown: handleKeyDown,\n        placeholder: \"Enter Block Number or TX Hash\",\n        style: {\n          width: \"80%\",\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }, this), !isLoading && (searchResult === null || searchResult === void 0 ? void 0 : searchResult.type) === \"block\" && /*#__PURE__*/_jsxDEV(BlockDetails, {\n      blockNumber: searchResult.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), !isLoading && (searchResult === null || searchResult === void 0 ? void 0 : searchResult.type) === \"tx\" && /*#__PURE__*/_jsxDEV(TransactionDetails, {\n      txHash: searchResult.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Explorer, \"Znw00Al9Y36X2qnZgMbWA64lcRU=\");\n_c = Explorer;\nexport default Explorer;\nvar _c;\n$RefreshReg$(_c, \"Explorer\");","map":{"version":3,"names":["React","useState","TransactionDetails","BlockDetails","jsxDEV","_jsxDEV","Explorer","_s","searchInput","setSearchInput","searchType","setSearchType","searchResult","setSearchResult","error","setError","isLoading","setIsLoading","handleSearch","test","type","value","startsWith","length","setTimeout","handleKeyDown","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","onKeyDown","placeholder","style","width","marginRight","onClick","blockNumber","txHash","_c","$RefreshReg$"],"sources":["/Users/sungwoocho/Desktop/expo/src/components/Explorer.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport TransactionDetails from \"./TransactionDetails\";\nimport BlockDetails from \"./BlockDetails\";\nimport \"../assets/styles.css\";\n\nconst Explorer: React.FC = () => {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [searchType, setSearchType] = useState<\"block\" | \"tx\" | null>(null);\n  const [searchResult, setSearchResult] = useState<{ type: \"block\" | \"tx\"; value: string } | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  // 변경: 검색 중 로딩 상태를 관리하기 위해 isLoading 상태 추가\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSearch = () => {\n    setError(null);\n    // 변경: 검색 시작 시 로딩 상태를 true로 설정\n    setIsLoading(true);\n    if (/^\\d+$/.test(searchInput)) {\n      setSearchType(\"block\");\n      setSearchResult({ type: \"block\", value: searchInput });\n    } else if (searchInput.startsWith(\"0x\") && searchInput.length === 66) {\n      setSearchType(\"tx\");\n      setSearchResult({ type: \"tx\", value: searchInput });\n    } else {\n      setSearchType(null);\n      setSearchResult(null);\n      setError(\"Please enter a valid Block Number or TX Hash (0x followed by 64 characters)\");\n    }\n    // 변경: 검색 완료 후 로딩 상태를 false로 설정\n    // 실제로는 비동기 작업이 완료된 후 설정해야 하지만, 여기서는 간단히 setTimeout으로 시뮬레이션\n    setTimeout(() => setIsLoading(false), 500); // 500ms 후 로딩 종료 (실제로는 비동기 작업 완료 시점에 설정)\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n\n  return (\n    <div className=\"explorer-container\">\n      <h1>Blockchain Explorer</h1>\n\n      <div className=\"section\">\n        <input\n          type=\"text\"\n          value={searchInput}\n          onChange={(e) => setSearchInput(e.target.value)}\n          onKeyDown={handleKeyDown}\n          placeholder=\"Enter Block Number or TX Hash\"\n          style={{ width: \"80%\", marginRight: \"10px\" }}\n        />\n        <button onClick={handleSearch}>Search</button>\n      </div>\n\n      {/* 변경: 에러 메시지 표시 */}\n      {error && <div className=\"result error\">{error}</div>}\n\n      {/* 변경: 로딩 중일 때 로딩 메시지 표시 */}\n      {isLoading && <div className=\"result\">Loading...</div>}\n\n      {/* 변경: 로딩이 완료된 후에만 결과 표시 */}\n      {!isLoading && searchResult?.type === \"block\" && (\n        <BlockDetails blockNumber={searchResult.value} />\n      )}\n      {!isLoading && searchResult?.type === \"tx\" && (\n        <TransactionDetails txHash={searchResult.value} />\n      )}\n    </div>\n  );\n};\n\nexport default Explorer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}