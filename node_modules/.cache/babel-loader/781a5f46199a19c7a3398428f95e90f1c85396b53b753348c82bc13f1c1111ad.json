{"ast":null,"code":"import { ethers } from \"ethers\";\nconst KAIROS_RPC_URL = \"https://public-en.node.kaia.io\";\nconst provider = new ethers.JsonRpcProvider(KAIROS_RPC_URL);\nexport const getBlockNumber = async () => {\n  return await provider.getBlockNumber();\n};\nexport const getBlock = async blockNumber => {\n  return await provider.getBlock(blockNumber);\n};\nexport const getTransaction = async txHash => {\n  return await provider.getTransaction(txHash);\n};\nexport const getTransactionReceipt = async txHash => {\n  return await provider.getTransactionReceipt(txHash);\n};\nexport const getBalance = async address => {\n  return await provider.getBalance(address);\n};\nexport const getCode = async address => {\n  return await provider.getCode(address);\n};\nexport const getGasPrice = async () => {\n  const feeData = await provider.getFeeData();\n  return feeData.gasPrice;\n};","map":{"version":3,"names":["ethers","KAIROS_RPC_URL","provider","JsonRpcProvider","getBlockNumber","getBlock","blockNumber","getTransaction","txHash","getTransactionReceipt","getBalance","address","getCode","getGasPrice","feeData","getFeeData","gasPrice"],"sources":["/Users/sungwoocho/Desktop/expo/src/services/api.ts"],"sourcesContent":["import { ethers } from \"ethers\";\n\nconst KAIROS_RPC_URL = \"https://public-en.node.kaia.io\";\nconst provider = new ethers.JsonRpcProvider(KAIROS_RPC_URL);\n\nexport const getBlockNumber = async (): Promise<number> => {\n  return await provider.getBlockNumber();\n};\n\nexport const getBlock = async (blockNumber: string | number) => {\n  return await provider.getBlock(blockNumber);\n};\n\nexport const getTransaction = async (txHash: string) => {\n  return await provider.getTransaction(txHash);\n};\n\nexport const getTransactionReceipt = async (txHash: string) => {\n  return await provider.getTransactionReceipt(txHash);\n};\n\nexport const getBalance = async (address: string) => {\n  return await provider.getBalance(address);\n};\n\nexport const getCode = async (address: string) => {\n  return await provider.getCode(address);\n};\n\nexport const getGasPrice = async () => {\n  const feeData = await provider.getFeeData();\n  return feeData.gasPrice!;\n};"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;AAE/B,MAAMC,cAAc,GAAG,gCAAgC;AACvD,MAAMC,QAAQ,GAAG,IAAIF,MAAM,CAACG,eAAe,CAACF,cAAc,CAAC;AAE3D,OAAO,MAAMG,cAAc,GAAG,MAAAA,CAAA,KAA6B;EACzD,OAAO,MAAMF,QAAQ,CAACE,cAAc,CAAC,CAAC;AACxC,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG,MAAOC,WAA4B,IAAK;EAC9D,OAAO,MAAMJ,QAAQ,CAACG,QAAQ,CAACC,WAAW,CAAC;AAC7C,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAOC,MAAc,IAAK;EACtD,OAAO,MAAMN,QAAQ,CAACK,cAAc,CAACC,MAAM,CAAC;AAC9C,CAAC;AAED,OAAO,MAAMC,qBAAqB,GAAG,MAAOD,MAAc,IAAK;EAC7D,OAAO,MAAMN,QAAQ,CAACO,qBAAqB,CAACD,MAAM,CAAC;AACrD,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAOC,OAAe,IAAK;EACnD,OAAO,MAAMT,QAAQ,CAACQ,UAAU,CAACC,OAAO,CAAC;AAC3C,CAAC;AAED,OAAO,MAAMC,OAAO,GAAG,MAAOD,OAAe,IAAK;EAChD,OAAO,MAAMT,QAAQ,CAACU,OAAO,CAACD,OAAO,CAAC;AACxC,CAAC;AAED,OAAO,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAMC,OAAO,GAAG,MAAMZ,QAAQ,CAACa,UAAU,CAAC,CAAC;EAC3C,OAAOD,OAAO,CAACE,QAAQ;AACzB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}